function(setup_package)
  include(InstallRequiredSystemLibraries)
  set(CPACK_PACKAGE_NAME "${MAIN_EXECUTABLE_NAME_FROM_CONFIG}")
  set(CPACK_PACKAGE_VENDOR "${PROJECT_AUTHOR_FROM_CONFIG}")
  set(CPACK_PACKAGE_CONTACT "${PROJECT_AUTHOR_CONTACT_FROM_CONFIG}")
  set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "${CMAKE_PROJECT_DESCRIPTION}")
  set(CPACK_PACKAGE_VERSION "${CMAKE_PROJECT_VERSION}")

  set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${lower_build_type}_${TARGET_OS_NAME}_${TARGET_ARCH}")
  set(CPACK_RESOURCE_FILE_LICENSE "${PROJECT_ROOT_DIR}/LICENSE")
  set(CPACK_RESOURCE_FILE_README "${PROJECT_ROOT_DIR}/README.md")
  set(CPACK_PACKAGE_DIRECTORY "${PROJECT_OUT_DIR}/package/${lower_build_type}-${TARGET_OS_NAME}-${TARGET_ARCH}")
  set(CPACK_PACKAGE_INSTALL_DIRECTORY "${MAIN_EXECUTABLE_NAME_FROM_CONFIG}")
  set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}")
  set(CPACK_PACKAGE_EXECUTABLES "${MAIN_EXECUTABLE_NAME_FROM_CONFIG}" "Launch ${CMAKE_PROJECT_NAME}")

  if(TARGET_OS_NAME MATCHES "linux")
    # set(CPACK_PACKAGING_INSTALL_PREFIX "/usr")
    set(CPACK_GENERATOR "DEB;TGZ")
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "${CPACK_PACKAGE_VENDOR}")
    set(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.27)")
    set(CPACK_DEBIAN_PACKAGE_SECTION "utils")
  elseif(TARGET_OS_NAME MATCHES "windows")
    set(CPACK_GENERATOR "NSIS64;ZIP")

    # Currently WiX tools are only supported for Windows
    if(NOT MINGW_BUILD)
      set(CPACK_GENERATOR "${CPACK_GENERATOR};WIX")
      set(CPACK_RESOURCE_FILE_LICENSE "${BUILD_RESOURCES_DIR}/windows/license.txt")
      set(CPACK_WIX_PRODUCT_ICON "${BUILD_RESOURCES_DIR}/windows/theme/logo_48.ico")

      # set(CPACK_WIX_TEMPLATE "${BUILD_RESOURCES_DIR}/windows/wix/template.wxs.in")
      # set(CPACK_WIX_LICENSE_RTF "${BUILD_RESOURCES_DIR}/windows/wix/license.rtf")
      # set(CPACK_WIX_UI_BANNER "${BUILD_RESOURCES_DIR}/windows/wix/banner.bmp")
      # set(CPACK_WIX_UI_DIALOG "${BUILD_RESOURCES_DIR}/windows/wix/dialog.bmp")
    endif()

    set(CPACK_NSIS_DISPLAY_NAME "${CMAKE_PROJECT_NAME}")
    set(CPACK_NSIS_UNINSTALL_NAME "uninstall_${CPACK_PACKAGE_NAME}")
    set(CPACK_NSIS_CONTACT "${CPACK_PACKAGE_CONTACT}")
    set(CPACK_NSIS_MODIFY_PATH OFF)
    set(CPACK_NSIS_EXECUTABLES_DIRECTORY "bin")
    set(CPACK_NSIS_ENABLE_UNINSTALL_BEFORE_INSTALL TRUE)
    set(CPACK_NSIS_INSTALL_ROOT "$PROGRAMFILES64")
    set(CPACK_NSIS_MUI_FINISHPAGE_RUN "${MAIN_EXECUTABLE_NAME}.exe")
    set(CPACK_NSIS_MUI_ICON "${BUILD_RESOURCES_DIR}/windows/theme/logo_48.ico")
    set(CPACK_NSIS_MUI_UNIICON "${BUILD_RESOURCES_DIR}/windows/theme/logo_48.ico")

    if(NOT MINGW_BUILD)
      set(CPACK_NSIS_BRANDING_TEXT "${CPACK_PACKAGE_NAME} installer")
    endif()

  elseif(TARGET_OS_NAME MATCHES "darwin")
    # set(CPACK_PACKAGING_INSTALL_PREFIX "/usr/local")

    if(DEFINED CPACK_PREFERRED_GENERATOR)
      set(CPACK_GENERATOR "${CPACK_PREFERRED_GENERATOR}")
    else()
      # Generate both .dmg and .pkg by default.
      set(CPACK_GENERATOR "DragNDrop;productbuild")
    endif()

    set(CPACK_DMG_VOLUME_NAME "${CMAKE_PROJECT_NAME}")
    set(CPACK_DMG_FORMAT "UDZO")
    set(CPACK_DMG_SLA_LANGUAGES "ja;en")
    set(CPACK_DMG_SLA_DIR "${BUILD_RESOURCES_DIR}/apple")

    # set(CPACK_DMG_DS_STORE_SETUP_SCRIPT "${CPACK_DMG_SLA_DIR}/dmg_setup.scpt")
    # set(CPACK_DMG_BACKGROUND_IMAGE "${CPACK_DMG_SLA_DIR}/dmg_background.png")
    set(CPACK_RESOURCE_FILE_LICENSE "${CPACK_DMG_SLA_DIR}/license.html")
    set(CPACK_RESOURCE_FILE_README "${CPACK_DMG_SLA_DIR}/readme.html")
    set(CPACK_DMG_SLA_USE_RESOURCE_FILE_LICENSE TRUE)
    set(CPACK_DMG_SLA_USE_RESOURCE_FILE_README TRUE)

  else()
    message(FATAL_ERROR "unknown platform detected: ${TARGET_OS_NAME}")
  endif()

  include(CPack)
endfunction()