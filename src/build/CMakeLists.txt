set(BUILD_NAME ${MAIN_EXECUTABLE_NAME_FROM_CONFIG})
set(BUILD_VERSION ${PROJECT_VERSION})
set(BUILD_NUMBER 0)
set(BUILD_DESCRIPTION ${PROJECT_DESCRIPTION})
set(BUILD_TYPE ${CMAKE_BUILD_TYPE})
string(TIMESTAMP BUILD_TIME "%Y-%m-%d %H:%M UTC" UTC)
set(BUILD_PLATFORM ${CMAKE_HOST_SYSTEM_NAME})
set(BUILD_ARCH ${CMAKE_HOST_SYSTEM_PROCESSOR})
set(BUILD_COMPILER "${CMAKE_CXX_COMPILER_ID} (version ${CMAKE_CXX_COMPILER_VERSION})")

set(TARGET_PLATFORM ${CMAKE_SYSTEM_NAME})
set(TARGET_ARCH ${CMAKE_SYSTEM_PROCESSOR})

# TARGET_BITS
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
  set(TARGET_BITS "64 bit")
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
  set(TARGET_BITS "32 bit")
else()
  set(TARGET_BITS "Unknown")
endif()

# BUILD_GIT_COMMIT_HASH
find_package(Git QUIET)

if(GIT_FOUND)
  execute_process(
    COMMAND ${GIT_EXECUTABLE} rev-parse --short HEAD
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    OUTPUT_VARIABLE BUILD_GIT_COMMIT_HASH
    OUTPUT_STRIP_TRAILING_WHITESPACE
    RESULT_VARIABLE GIT_RESULT
  )

  if(NOT GIT_RESULT EQUAL 0)
    set(BUILD_GIT_COMMIT_HASH "UNKNOWN_HASH")
  endif()
else()
  set(BUILD_GIT_COMMIT_HASH "UNKNOWN_HASH")
endif()

configure_file(
  "${CMAKE_CURRENT_SOURCE_DIR}/build_config.h.in"
  "${CMAKE_CURRENT_SOURCE_DIR}/build_config.h"
  @ONLY
)